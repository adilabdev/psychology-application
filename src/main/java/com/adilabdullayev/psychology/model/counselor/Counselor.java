package com.adilabdullayev.psychology.model.counselor;

import com.adilabdullayev.psychology.model.enums.CounselorSpecialization;
import com.adilabdullayev.psychology.model.notes.UserCounselorNote;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import jakarta.persistence.*;
import lombok.Data;
import com.adilabdullayev.psychology.model.enums.CounselorStatus;

import java.time.LocalDateTime;
import java.util.List;

@Entity
@Table(name = "counselors", uniqueConstraints = {
        @UniqueConstraint(columnNames = "email"),
        @UniqueConstraint(columnNames = "phone")
})
public class Counselor extends CounselorBase {

    // Notes for the counselor
    @OneToMany(mappedBy = "noteOwner", cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonManagedReference
    private List<UserCounselorNote> counselorNotes;

    // Counselor code - unique identifier
    @Column(name = "counselor_code", unique = true)
    private String counselorCode;

    // Counselor status
    @Enumerated(EnumType.STRING)
    @Column(length = 20)
    private CounselorStatus status;

    @Column(name = "is_active")
    private boolean isActive = true;

    // Session count for the counselor
    private Integer sessionCount;

    // Last session date
    private LocalDateTime lastSessionDate;


    // Adding the specialization field
    @ManyToOne
    @JoinColumn(name = "specialization_id", nullable = false)
    private CounselorSpecialization specialization;


    // sessionCount
    public void setSessionCount(Integer sessionCount) { this.sessionCount = sessionCount; }

    // lastSessionDate
    public void setLastSessionDate(LocalDateTime lastSessionDate) { this.lastSessionDate = lastSessionDate; }

    // specialization
    public CounselorSpecialization getSpecialization() { return specialization; }
    public void setSpecialization(CounselorSpecialization specialization) { this.specialization = specialization; }



    public List<UserCounselorNote> getCounselorNotes() {
        return counselorNotes;
    }


    // Getter and Setter methods are automatically generated by Lombok

    // Custom Getters
    public String getCounselorCode() {
        return counselorCode;
    }

    public void setCounselorCode(String counselorCode) {
        this.counselorCode = counselorCode;
    }

    public Boolean getIsActive() {
        return isActive;
    }

    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    public Integer getSessionCount() {
        return sessionCount;
    }

    public LocalDateTime getLastSessionDate() {
        return lastSessionDate;
    }

    public CounselorStatus getStatus() {
        return status;
    }

}
