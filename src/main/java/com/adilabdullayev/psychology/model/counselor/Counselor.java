package com.adilabdullayev.psychology.model.counselor;

import com.adilabdullayev.psychology.model.enums.CounselorSpecialization;
import com.adilabdullayev.psychology.model.notes.UserCounselorNote;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import jakarta.persistence.*;
import lombok.Data;
import com.adilabdullayev.psychology.model.enums.CounselorStatus;

import java.time.LocalDateTime;
import java.util.List;

@Entity
@Data
@Table(name = "counselors", uniqueConstraints = {
        @UniqueConstraint(columnNames = "email"),
        @UniqueConstraint(columnNames = "phone")
})
public class Counselor extends CounselorBase {

    // Notes for the counselor
    @OneToMany(mappedBy = "noteOwner", cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonManagedReference
    private List<UserCounselorNote> counselorNotes;

    // Counselor code - unique identifier
    @Column(name = "counselor_code", unique = true)
    private String counselorCode;

    // Counselor status
    @Enumerated(EnumType.STRING)
    @Column(length = 20)
    private CounselorStatus status;

    @Column(name = "is_active")
    private boolean isActive = true;

    // Session count for the counselor
    private Integer sessionCount;

    // Last session date
    private LocalDateTime lastSessionDate;


    // Adding the specialization field
    @ManyToOne
    @JoinColumn(name = "specialization_id", nullable = false)
    private CounselorSpecialization specialization;

    // Getter and Setter methods are automatically generated by Lombok
}
